{"version":3,"sources":["config.js","screens/Home.js","components/BoardCell.js","components/BoardLine.js","components/GameOptions.js","components/NumbersPanel.js","components/HelpButtons.js","screens/Board.js","functions/CreateGame.js","App.js","serviceWorker.js","index.js"],"names":["EASY","Home","level","this","props","onChangeLevel","className","Config","onClick","handleChangeLevel","bind","onStartGame","Component","BoardCell","index","onClickCell","cell","selection","options","classes","row","column","col","push","selected","disabled","number","guess","correct","errors","join","handleClickCell","BoardLine","cells","map","i","key","renderCells","GameOptions","option","onToggleOption","toString","handleToggleOption","NumbersPanel","onClickNumber","views","buttons","a","handleClickNumber","onClickDelete","slice","renderButtons","HelpButtons","onStopGame","Board","game","chunk","line","style","width","renderLines","rows","columns","square","total","getCurrentRowFromData","data","Math","floor","length","getCurrentColumnFromData","getCurrentSquareFirstIndex","currentRow","x","getAvailableNumbers","numbers","Array","from","val","rowNumbers","start","getRowNumbers","columnNumbers","getColumnNumbers","squareNumbers","currentColumn","rowsPos","columnsPos","r","c","hasOwnProperty","getSquareNumbers","currentNumbers","concat","difference","getNextNumber","sort","random","createGame","blankCells","nextNumber","backTo","formatted","n","blankItems","sampleSize","keys","arrayToGameData","App","state","visible","window","document","body","addEventListener","handleKeyboardType","handleMouseClick","e","event","keyCode","Number","parseInt","target","parents","el","parentElement","closest","setState","CreateGame","forEach","selectedNumber","reduce","b","isGameFinished","handleClickDelete","handleStopGame","handleStartGame","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4a80034.chunk.js","sourcesContent":["export const EASY = 20;\nexport const MEDIUM = 35;\nexport const HARD = 54;\nexport const INSANE = 62;\n\nexport const toString = level => {\n    if (level === EASY) {\n        return 'Easy';\n    }\n\n    if (level === MEDIUM) {\n        return 'Medium';\n    }\n\n    if (level === HARD) {\n        return 'Hard';\n    }\n\n    return 'Insane';\n};\n","import React, { Component } from 'react';\n\nimport * as Config from '../config';\n\nexport default class Home extends Component {\n    handleChangeLevel(level) {\n        this.props.onChangeLevel(level);\n    }\n\n    render() {\n        const { level } = this.props;\n\n        return (\n            <div className=\"home\">\n                <div className=\"options\">\n                    <ul className=\"main-menu\">\n                        <li\n                            className={level === Config.EASY ? 'selected' : ''}\n                            onClick={this.handleChangeLevel.bind(this, Config.EASY)}>\n                            <div>\n                                <span>Easy</span>\n                            </div>\n                        </li>\n                        <li\n                            className={level === Config.MEDIUM ? 'selected' : ''}\n                            onClick={this.handleChangeLevel.bind(this, Config.MEDIUM)}>\n                            <div>\n                                <span>Medium</span>\n                            </div>\n                        </li>\n                        <li\n                            className={level === Config.HARD ? 'selected' : ''}\n                            onClick={this.handleChangeLevel.bind(this, Config.HARD)}>\n                            <div>\n                                <span>Hard</span>\n                            </div>\n                        </li>\n                        <li\n                            className={level === Config.INSANE ? 'selected' : ''}\n                            onClick={this.handleChangeLevel.bind(this, Config.INSANE)}>\n                            <div>\n                                <span>Insane</span>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"buttons\">\n                    <button className=\"button round play big\" onClick={this.props.onStartGame}>\n                        Play\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class BoardCell extends Component {\n    handleClickCell(index) {\n        this.props.onClickCell(index);\n    }\n\n    render() {\n        const { cell, selection, options } = this.props;\n        const classes = ['board-cell'];\n\n        if (cell.row === selection.row || cell.column === selection.col) {\n            classes.push('highlighted');\n        }\n\n        if (cell.selected) {\n            classes.push('focused');\n        }\n\n        if (cell.disabled) {\n            classes.push('disabled');\n        }\n\n        if (selection.number === cell.guess) {\n            classes.push('selected');\n        }\n\n        if (cell.guess && cell.guess !== cell.correct && options.errors === true) {\n            classes.push('error');\n        }\n\n        return (\n            <div\n                className={classes.join(' ')}\n                onClick={this.handleClickCell.bind(this, cell.index)}>\n                {cell.guess}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport BoardCell from './BoardCell';\n\nexport default class BoardLine extends Component {\n    renderCells() {\n        const { cells } = this.props;\n        return cells.map((cell, i) => (<BoardCell key={i} cell={cell} {...this.props} />));\n    }\n\n    render() {\n        return (\n            <div className=\"board-line\">{this.renderCells()}</div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport { toString } from '../config';\n\nexport default class GameOptions extends Component {\n    handleToggleOption(option) {\n        this.props.onToggleOption(option);\n    }\n\n    render() {\n        const { options, level } = this.props;\n\n        return (\n            <div className=\"options\">\n                <div className=\"buttons menu-buttons\">\n                    <div className=\"button-option\">\n                        <span className=\"level\">\n                            <strong>Dificulty: </strong>\n                            <span>{toString(level)}</span>\n                        </span>\n                    </div>\n                    <div className=\"button-option\">\n                        <span onClick={this.handleToggleOption.bind(this, 'errors')}>\n                            { !options.errors ? 'Show' : 'Hide' } Errors\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class NumbersPanel extends Component {\n    handleClickNumber(number) {\n        this.props.onClickNumber(number);\n    }\n\n    renderButtons() {\n        const views = [];\n        const buttons = [];\n\n        for (let a = 1; a <= 9; a += 1) {\n            buttons.push(\n                <div\n                    key={a}\n                    className=\"number panel-button\"\n                    onClick={this.handleClickNumber.bind(this, a)}>\n                    <span>{a}</span>\n                </div>\n            );\n        }\n        buttons.push(\n            <div\n                key=\"delete\"\n                className=\"number panel-button\"\n                onClick={this.props.onClickDelete}>\n                <span>&#10006;</span>\n            </div>\n        );\n\n        views.push(\n            <div className=\"numbers\" key=\"1\">\n                {buttons.slice(0, 5)}\n            </div>\n        );\n\n        views.push(\n            <div className=\"numbers\" key=\"2\">\n                {buttons.slice(5)}\n            </div>\n        );\n\n        return views;\n    }\n\n    render() {\n        return (\n            <div className=\"panel-numbers\">\n                {this.renderButtons()}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class HelpButtons extends Component {\n    render() {\n        return (\n            <div className=\"panel-help\">\n                <div className=\"panel-row\">\n                    <div className=\"panel-button\">\n                        1\n                    </div>\n                    <div className=\"panel-button\">\n                        2\n                    </div>\n                </div>\n                <div className=\"panel-row\">\n                    <div className=\"panel-button button-new-game\" onClick={this.props.onStopGame}>\n                        New\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { chunk } from 'lodash';\n\nimport BoardLine from '../components/BoardLine';\nimport GameOptions from '../components/GameOptions';\nimport NumbersPanel from '../components/NumbersPanel';\nimport HelpButtons from '../components/HelpButtons';\n\nexport default class Board extends Component {\n    renderLines() {\n        const { game } = this.props;\n        const lines = chunk(game, 9);\n        return lines.map((line, i) => <BoardLine key={i} cells={line} {...this.props} />);\n    }\n\n    render() {\n        return (\n            <div className=\"game\" style={{ width: '100%' }}>\n                <GameOptions {...this.props} />\n                <div className=\"board\">\n                    {this.renderLines()}\n                </div>\n                <div className=\"panel-buttons\">\n                    <NumbersPanel\n                        onClickNumber={this.props.onClickNumber}\n                        onClickDelete={this.props.onClickDelete} />\n                    <HelpButtons onStopGame={this.props.onStopGame} />\n                </div>\n            </div>\n        );\n    }\n}\n","import {\n    difference,\n    sampleSize,\n    slice,\n} from 'lodash';\n\nconst rows = 9;\nconst columns = 9;\nconst square = 3;\nconst total = 81;\n\nfunction createArrayNumbers() {\n    return Array.from(new Array(rows), (val, index) => index + 1);\n}\n\nfunction getCurrentRowFromData(data) {\n    return Math.floor(data.length / rows);\n}\n\nfunction getCurrentColumnFromData(data) {\n    return data.length % columns;\n}\n\nfunction getRowNumbers(data) {\n    if (data.length) {\n        const currentRow = getCurrentRowFromData(data);\n        const start = currentRow * rows;\n        return slice(data, start);\n    }\n\n    return [];\n}\n\nfunction getColumnNumbers(data) {\n    if (data.length) {\n        const currentColumn = getCurrentColumnFromData(data);\n        const numbers = [];\n        for (let a = currentColumn; a < data.length; a += columns) {\n            numbers.push(data[a]);\n        }\n\n        return numbers;\n    }\n\n    return [];\n}\n\nfunction getSquareNumbers(data) {\n    if (data.length) {\n        const currentColumn = getCurrentColumnFromData(data);\n        const currentRow = getCurrentRowFromData(data);\n        const numbers = [];\n        let rowsPos = [];\n        let columnsPos = [];\n\n        for (let x = square; x <= rows + 1; x += square) {\n            if (currentRow < x) {\n                rowsPos = [x - square, x - 1];\n                break;\n            }\n        }\n\n        for (let x = square; x <= columns + 1; x += square) {\n            if (currentColumn < x) {\n                columnsPos = [x - square, x - 1];\n                break;\n            }\n        }\n\n        let index;\n\n        if (rowsPos.length === 2 && columnsPos.length === 2) {\n            for (let r = rowsPos[0]; r <= rowsPos[1]; r += 1) {\n                for (let c = columnsPos[0]; c <= columnsPos[1]; c += 1) {\n                    index = (r * rows) + c;\n                    if (!data.hasOwnProperty(index)) {\n                        break;\n                    }\n\n                    numbers.push(data[index]);\n                }\n            }\n        }\n\n        return numbers;\n    }\n\n    return [];\n}\n\nfunction getCurrentSquareFirstIndex(data) {\n    if (data.length) {\n        const currentRow = getCurrentRowFromData(data);\n\n        for (let x = square; x <= rows + 1; x += square) {\n            if (currentRow < x) {\n                return (x - square) * rows;\n            }\n        }\n    }\n\n    return 0;\n}\n\nfunction getAvailableNumbers(data) {\n    const numbers = createArrayNumbers();\n\n    if (!data.length) {\n        return numbers;\n    }\n\n    const rowNumbers = getRowNumbers(data);\n    const columnNumbers = getColumnNumbers(data);\n    const squareNumbers = getSquareNumbers(data);\n    const currentNumbers = rowNumbers.concat(columnNumbers, squareNumbers);\n\n    return difference(numbers, currentNumbers);\n}\n\nfunction getNextNumber(data) {\n    const numbers = getAvailableNumbers(data);\n    return numbers.sort(() => 0.5 - Math.random())[0];\n}\n\nfunction arrayToGameData(data, blankCells) {\n    const formatted = data.map((n, i) => {\n        return {\n            index: i,\n            correct: n,\n            guess: n,\n            row: Math.floor(i / 9),\n            column: i % 9,\n            disabled: true,\n        };\n    });\n    const blankItems = sampleSize(Array.from(Array(data.length).keys()), blankCells);\n\n    for (let a = 0; a < blankItems.length; a += 1) {\n        formatted[blankItems[a]].disabled = false;\n        formatted[blankItems[a]].guess = '';\n    }\n\n    return formatted;\n}\n\nexport default function createGame(blankCells) {\n    let data = [];\n    let nextNumber;\n    let backTo;\n\n    for (let a = 0; a <= total; a += 1) {\n        nextNumber = getNextNumber(data);\n\n        if (!nextNumber) {\n            a = getCurrentSquareFirstIndex(data);\n\n            if (backTo === a) {\n                data = slice(data, 0, a-1);\n                a = getCurrentSquareFirstIndex(data);\n            } else {\n                backTo = a;\n            }\n\n            data = slice(data, 0, a);\n        } else {\n            data.push(nextNumber);\n        }\n    }\n\n    return arrayToGameData(data, blankCells);\n}\n","import React, { Component } from 'react';\n\nimport Home from './screens/Home';\nimport Board from './screens/Board';\nimport CreateGame from './functions/CreateGame';\nimport * as Config from './config';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            game: null,\n            // game: CreateGame(Config.HARD),\n            level: Config.EASY,\n            selection: {\n                row: null,\n                col: null,\n                number: null,\n                index: null,\n            },\n            options: {\n                visible: false,\n                numbers: true,\n                errors: true,\n            },\n        };\n    }\n\n    UNSAFE_componentWillMount() {\n        window.document.body.addEventListener('keydown', this.handleKeyboardType.bind(this));\n        window.document.body.addEventListener('click', this.handleMouseClick.bind(this));\n    }\n\n    handleKeyboardType(e) {\n        const event = e || window.event;\n        const { selection } = this.state;\n\n        // numerid keys\n        if (selection.index !== null && (e.keyCode > 48 && e.keyCode <= 57)) {\n            this.handleClickNumber(Number.parseInt(event.key));\n        }\n    }\n\n    handleMouseClick(e) {\n        const { target } = e;\n        const { options } = this.state;\n\n        if (!options.visible) {\n            return;\n        }\n\n        const parents = [];\n        let el = target;\n\n        while (true) {\n            el = el.parentElement.closest('.menu-buttons');\n\n            if (!el) {\n                break;\n            }\n            \n            parents.push(el);\n        }\n\n        if (parents.length === 0) {\n            options.visible = false;\n            this.setState({ options });\n        }\n    }\n\n    handleChangeLevel(level) {\n        this.setState({\n            level,\n        });\n    }\n\n    handleStartGame() {\n        this.setState({\n            game: CreateGame(this.state.level),\n        });\n    }\n\n    handleStopGame() {\n        this.setState({\n            game: null,\n            selection: {\n                row: null,\n                col: null,\n                number: null,\n                index: null,\n            },\n            options: {\n                visible: false,\n                numbers: true,\n                errors: true,\n            },\n        });\n    }\n\n    handleClickCell(index) {\n        const { game, selection } = this.state;\n\n        if (!game.hasOwnProperty(index)) {\n            return;\n        }\n        \n        game.forEach(i => i.selected = false);\n        game[index].selected = true;\n\n        let selectedNumber = selection.number;\n\n        if (!game[index].guess) {\n            selectedNumber = null;\n        } else if (game[index].guess !== selection.number) {\n            selectedNumber = game[index].guess;\n        }\n\n        this.setState({\n            selection: {\n                row: game[index].row,\n                col: game[index].column,\n                number: selectedNumber,\n                index,\n            },\n            game,\n        });\n    }\n\n    isGameFinished(game) {\n        return game.reduce((a, b) => {\n            if (b.disabled) {\n                return a;\n            }\n            \n            if (!b.guess) {\n                a = false;\n            } else if (b.guess !== b.correct) {\n                a = false;\n            }\n\n            return a;\n        }, true);\n    }\n\n    handleClickNumber(number) {\n        let { game, selection } = this.state;\n\n        selection.number = number;\n\n        if (selection.index === null) {\n            this.setState({ selection });\n            return;\n        }\n\n        if (game[selection.index].disabled === true) {\n            return;\n        }\n        \n        if (game[selection.index].guess === number) {\n            selection.number = null;\n            game[selection.index].guess = '';\n        } else {\n            selection.row = game[selection.index].row;\n            selection.col = game[selection.index].column;\n            game[selection.index].guess = number;\n\n            if (this.isGameFinished(game)) {\n                game = null;\n            }\n        }\n\n        this.setState({ game, selection });\n    }\n\n    handleClickDelete() {\n        const { game, selection } = this.state;\n\n        game.forEach(i => {\n            if (i.selected === true && i.disabled !== true) {\n                i.guess = '';\n                selection.number = null;\n            }\n        });\n\n        this.setState({game, selection});\n    }\n\n    handleToggleOption(option) {\n        const { options } = this.state;\n        options[option] = !options[option];\n\n        this.setState({options});\n    }\n\n    render() {\n        if (this.state.game !== null) {\n            return (\n                <Board\n                    level={this.state.level}\n                    game={this.state.game}\n                    selection={this.state.selection}\n                    options={this.state.options}\n                    onClickCell={this.handleClickCell.bind(this)}\n                    onClickNumber={this.handleClickNumber.bind(this)}\n                    onClickDelete={this.handleClickDelete.bind(this)}\n                    onToggleOption={this.handleToggleOption.bind(this)}\n                    onStopGame={this.handleStopGame.bind(this)} />\n            );\n        }\n\n        return (\n            <Home\n                level={this.state.level}\n                onChangeLevel={this.handleChangeLevel.bind(this)}\n                onStartGame={this.handleStartGame.bind(this)} />\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}